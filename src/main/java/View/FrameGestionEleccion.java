/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Classes.ClsCandidato;
import Classes.ClsElecciones;

import Classes.ClsMensaje;
import Controller.CtlCandidato;
import Controller.CtlEleccion;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class FrameGestionEleccion extends javax.swing.JFrame {

    CtlCandidato controladorCandidato;
    CtlEleccion controlador;
    ClsMensaje mensaje1;
      FrameMenu menu;

    /**
     * Creates new form FrameGestionEleccion
     */
    public FrameGestionEleccion(FrameMenu menu) {
        initComponents();
        this.menu= menu;
        this.menu.setVisible(false);

        this.controlador = new CtlEleccion();
        this.controladorCandidato = new CtlCandidato();
        this.mensaje1 = new ClsMensaje();

        this.ObtenerCandidatos();
        this.ObtenerElecciones();

    }

    public void ObtenerCandidatos() {

        LinkedList<ClsCandidato> candidatos = this.controladorCandidato.ObtenerCandidatos();

        DefaultComboBoxModel model = (DefaultComboBoxModel) this.comboCandidato.getModel();
        model.removeAllElements();

        for (ClsCandidato candidato : candidatos) {
            model.addElement(candidato.getNumeroDoc() + "-" + candidato.getNombre());

        }

        this.comboCandidato.setModel(model);

        //this.ActualizarListaCandidatos(candidatos);
    }

    public void ObtenerElecciones() {

        LinkedList<ClsElecciones> elecciones = this.controlador.ObtenerElecciones();
        this.ActualizarListaElecciones(elecciones);
    }

    public void ActualizarListaElecciones(LinkedList<ClsElecciones> lista) {
        DefaultTableModel model = (DefaultTableModel) this.listaElecciones1.getModel();
        model.setRowCount(0);
        for (ClsElecciones eleccion : lista) {
            Object[] row = {eleccion.getId(), eleccion.getNombre(), eleccion.getTipo(), eleccion.getFechaInicio(), eleccion.getFechaFinal(), eleccion.getEstado()};
            model.addRow(row);
        }
    }

    public void ObtenerInscritos() {
        int column = 0;
        int row = this.listaElecciones1.getSelectedRow();
        String ide = this.listaElecciones1.getModel().getValueAt(row, column).toString();

        LinkedList<ClsCandidato> inscritos = this.controlador.ObtenerInscritos(ide);

        this.ActualizarListaInscritos(inscritos);

    }

    public void ActualizarListaInscritos(LinkedList<ClsCandidato> lista) {
        DefaultTableModel model = (DefaultTableModel) this.listaCandidatosInscritos.getModel();
        model.setRowCount(0);
        for (ClsCandidato inscrip : lista) {
            Object[] row = {inscrip.getNumeroDoc(), inscrip.getNombre(), inscrip.getPartidoPolitico()};
            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        campoFechaIn = new com.toedter.calendar.JDateChooser();
        campoFechaFin = new com.toedter.calendar.JDateChooser();
        buttonCrear = new javax.swing.JButton();
        comboTipo = new javax.swing.JComboBox<>();
        campoNombre = new javax.swing.JTextField();
        buttonMenu = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaCandidatosInscritos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaElecciones1 = new javax.swing.JTable();
        buttonEliminar = new javax.swing.JButton();
        buttonCerrarEleccion = new javax.swing.JButton();
        campoEliminarInscripcion = new javax.swing.JButton();
        campoInscribir = new javax.swing.JButton();
        comboCandidato = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonCrear.setText("Crear ");
        buttonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCrearActionPerformed(evt);
            }
        });

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Presidencial", "Congreso", "Municipal", "Departamental" }));

        buttonMenu.setText("Menu");
        buttonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMenuActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo");

        jLabel2.setText("Fecha Inicio");

        jLabel3.setText("Fecha Fin");

        jLabel4.setText("Nombre");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(buttonCrear)
                .addGap(84, 84, 84)
                .addComponent(buttonMenu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel4)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(campoFechaIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(campoFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabel1)
                        .addGap(98, 98, 98)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(47, 47, 47))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(campoFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(campoFechaIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonCrear)
                    .addComponent(buttonMenu))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        listaCandidatosInscritos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Num Doc", "Nombre", "Partido"
            }
        ));
        jScrollPane1.setViewportView(listaCandidatosInscritos);

        listaElecciones1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id Elección", "Elección", "Tipo ", "Fecha Inicio", "Fecha Fin", "Estado"
            }
        ));
        listaElecciones1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaElecciones1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaElecciones1);

        buttonEliminar.setText("Eliminar Elección");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        buttonCerrarEleccion.setText("Cerrar Elección");
        buttonCerrarEleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarEleccionActionPerformed(evt);
            }
        });

        campoEliminarInscripcion.setText("Eliminar Inscripcion");
        campoEliminarInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoEliminarInscripcionActionPerformed(evt);
            }
        });

        campoInscribir.setText("Inscribir Candidato");
        campoInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoInscribirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(197, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(comboCandidato, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCerrarEleccion)
                    .addComponent(buttonEliminar)
                    .addComponent(campoEliminarInscripcion)
                    .addComponent(campoInscribir))
                .addGap(29, 29, 29))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(193, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonEliminar)
                .addGap(26, 26, 26)
                .addComponent(buttonCerrarEleccion)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(campoEliminarInscripcion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboCandidato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(campoInscribir)))
                .addGap(36, 36, 36))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(121, 121, 121)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(173, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCrearActionPerformed
        // TODO add your handling code here:
        String nombre = campoNombre.getText();
        String tipo = comboTipo.getSelectedItem().toString();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");

        String fechaI = formatoFecha.format(this.campoFechaIn.getDate());
        String fechaF = formatoFecha.format(this.campoFechaFin.getDate());

        try {
            Date i = formatoFecha.parse(fechaI);
            Date f = formatoFecha.parse(fechaF);
            Date a = new Date();

            if (i.compareTo(a) < 0) {

                mensaje1.CambiarMensaje(mensaje1.ERROR, "La fecha de inicio de la eleccion debe ser mayor fecha actual");
                JOptionPane.showMessageDialog(rootPane, mensaje1.getDescripcion());

            } else if (f.compareTo(i) < 0) {
                mensaje1.CambiarMensaje(mensaje1.ERROR, "La fecha final  debe ser mayor a la inicial");
                JOptionPane.showMessageDialog(rootPane, mensaje1.getDescripcion());

            } else {
                String estado = "creada";
                ClsElecciones eleccion = new ClsElecciones(estado, "", tipo, fechaI, fechaF, nombre, 0);
                ClsMensaje mensaje = this.controlador.AgregarEleccion(eleccion);
                JOptionPane.showMessageDialog(rootPane, mensaje.getDescripcion() + " " + nombre + " - " + tipo);

            }

            campoNombre.setText("");
            campoFechaIn.setDate(null);
            campoFechaFin.setDate(null);
            this.ObtenerElecciones();
        } catch (Exception e) {
        }
        this.ObtenerElecciones();
    }//GEN-LAST:event_buttonCrearActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        // TODO add your handling code here:
        int column = 0;
        int row = this.listaElecciones1.getSelectedRow();
        String id = this.listaElecciones1.getModel().getValueAt(row, column).toString();
        String nombre = this.listaElecciones1.getModel().getValueAt(row, column + 1).toString();

        String tipo = this.listaElecciones1.getModel().getValueAt(row, column + 2).toString();
        ClsMensaje mensaje = this.controlador.EliminarEleccion(id);
        if (mensaje != null) {
            JOptionPane.showMessageDialog(rootPane, mensaje.getDescripcion() + " " + id + " - " + nombre + " - " + tipo);
            this.ObtenerElecciones();
        }
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonCerrarEleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarEleccionActionPerformed
        // TODO add your handling code here:
        int column = 0;
        int row = this.listaElecciones1.getSelectedRow();
        String id = this.listaElecciones1.getModel().getValueAt(row, column).toString();
        String nombre = this.listaElecciones1.getModel().getValueAt(row, column + 1).toString();

        String tipo = this.listaElecciones1.getModel().getValueAt(row, column + 2).toString();
        String estado = this.listaElecciones1.getModel().getValueAt(row, column + 5).toString();

        if (!estado.equals("cerrada")) {

            ClsMensaje mensaje = this.controlador.CerrarEleccion(id);
            if (mensaje != null) {
                JOptionPane.showMessageDialog(rootPane, mensaje.getDescripcion() + " " + id + " - " + nombre + " - " + tipo);
                this.ObtenerElecciones();
            }
        } else {
            mensaje1.CambiarMensaje(mensaje1.ERROR, "La leccion " + id + " - " + nombre + " - " + tipo + " ya esta cerrada");
            JOptionPane.showMessageDialog(rootPane, mensaje1.getDescripcion());
        }
    }//GEN-LAST:event_buttonCerrarEleccionActionPerformed

    private void campoEliminarInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoEliminarInscripcionActionPerformed
        // TODO add your handling code here:
        int column = 0;
        int row = this.listaCandidatosInscritos.getSelectedRow();
        String id = this.listaCandidatosInscritos.getModel().getValueAt(row, column).toString();
        String nombre = this.listaCandidatosInscritos.getModel().getValueAt(row, column + 1).toString();

        String tipo = this.listaCandidatosInscritos.getModel().getValueAt(row, column + 2).toString();
        ClsMensaje mensaje = this.controlador.EliminarInscripcion(id);
        if (mensaje != null) {
            JOptionPane.showMessageDialog(rootPane, mensaje.getDescripcion() + " " + id + " - " + nombre + " - " + tipo);
            this.ObtenerInscritos();
        }

    }//GEN-LAST:event_campoEliminarInscripcionActionPerformed

    private void campoInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoInscribirActionPerformed
        // TODO add your handling code here:
        int column = 0;
        int row = this.listaElecciones1.getSelectedRow();
        String id = this.listaElecciones1.getModel().getValueAt(row, column).toString();
        String nombre = this.listaElecciones1.getModel().getValueAt(row, column + 1).toString();
        String tipo = this.listaElecciones1.getModel().getValueAt(row, column + 2).toString();
        String[] y = this.comboCandidato.getSelectedItem().toString().split("-", 2);
        String h = y[0];

        ClsMensaje mensaje = this.controlador.InscribirCandidato(h, id);
        if (mensaje != null) {
            JOptionPane.showMessageDialog(rootPane, mensaje.getDescripcion() + " " + y[1] + " fué inscrito en la elección " + nombre + " - " + tipo);
            this.ObtenerInscritos();
        }
    }//GEN-LAST:event_campoInscribirActionPerformed

    private void listaElecciones1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaElecciones1MouseClicked
        // TODO add your handling code here:
        this.ObtenerInscritos();
    }//GEN-LAST:event_listaElecciones1MouseClicked

    private void buttonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMenuActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
         this.menu.setVisible(true);
    }//GEN-LAST:event_buttonMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameGestionEleccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameGestionEleccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameGestionEleccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameGestionEleccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameGestionEleccion(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCerrarEleccion;
    private javax.swing.JButton buttonCrear;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonMenu;
    private javax.swing.JButton campoEliminarInscripcion;
    private com.toedter.calendar.JDateChooser campoFechaFin;
    private com.toedter.calendar.JDateChooser campoFechaIn;
    private javax.swing.JButton campoInscribir;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JComboBox<String> comboCandidato;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable listaCandidatosInscritos;
    private javax.swing.JTable listaElecciones1;
    // End of variables declaration//GEN-END:variables
}
